{"version":3,"file":"main.min.js","sources":["../../bower_components/almond/almond.js","config.js","lib/evt.js","xmlParse.js","display.js","randomizer.js","filter.js","processForm.js","character.js","character_collection.js","main.js"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license almond 0.2.9 Copyright (c) 2011-2014, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/jrburke/almond for details\n */\n//Going sloppy to avoid 'use strict' string cost, but strict practices should\n//be followed.\n/*jslint sloppy: true */\n/*global setTimeout: false */\n\nvar requirejs, require, define;\n(function (undef) {\n    var main, req, makeMap, handlers,\n        defined = {},\n        waiting = {},\n        config = {},\n        defining = {},\n        hasOwn = Object.prototype.hasOwnProperty,\n        aps = [].slice,\n        jsSuffixRegExp = /\\.js$/;\n\n    function hasProp(obj, prop) {\n        return hasOwn.call(obj, prop);\n    }\n\n    /**\n     * Given a relative module name, like ./something, normalize it to\n     * a real name that can be mapped to a path.\n     * @param {String} name the relative name\n     * @param {String} baseName a real name that the name arg is relative\n     * to.\n     * @returns {String} normalized name\n     */\n    function normalize(name, baseName) {\n        var nameParts, nameSegment, mapValue, foundMap, lastIndex,\n            foundI, foundStarMap, starI, i, j, part,\n            baseParts = baseName && baseName.split(\"/\"),\n            map = config.map,\n            starMap = (map && map['*']) || {};\n\n        //Adjust any relative paths.\n        if (name && name.charAt(0) === \".\") {\n            //If have a base name, try to normalize against it,\n            //otherwise, assume it is a top-level require that will\n            //be relative to baseUrl in the end.\n            if (baseName) {\n                //Convert baseName to array, and lop off the last part,\n                //so that . matches that \"directory\" and not name of the baseName's\n                //module. For instance, baseName of \"one/two/three\", maps to\n                //\"one/two/three.js\", but we want the directory, \"one/two\" for\n                //this normalization.\n                baseParts = baseParts.slice(0, baseParts.length - 1);\n                name = name.split('/');\n                lastIndex = name.length - 1;\n\n                // Node .js allowance:\n                if (config.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {\n                    name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');\n                }\n\n                name = baseParts.concat(name);\n\n                //start trimDots\n                for (i = 0; i < name.length; i += 1) {\n                    part = name[i];\n                    if (part === \".\") {\n                        name.splice(i, 1);\n                        i -= 1;\n                    } else if (part === \"..\") {\n                        if (i === 1 && (name[2] === '..' || name[0] === '..')) {\n                            //End of the line. Keep at least one non-dot\n                            //path segment at the front so it can be mapped\n                            //correctly to disk. Otherwise, there is likely\n                            //no path mapping for a path starting with '..'.\n                            //This can still fail, but catches the most reasonable\n                            //uses of ..\n                            break;\n                        } else if (i > 0) {\n                            name.splice(i - 1, 2);\n                            i -= 2;\n                        }\n                    }\n                }\n                //end trimDots\n\n                name = name.join(\"/\");\n            } else if (name.indexOf('./') === 0) {\n                // No baseName, so this is ID is resolved relative\n                // to baseUrl, pull off the leading dot.\n                name = name.substring(2);\n            }\n        }\n\n        //Apply map config if available.\n        if ((baseParts || starMap) && map) {\n            nameParts = name.split('/');\n\n            for (i = nameParts.length; i > 0; i -= 1) {\n                nameSegment = nameParts.slice(0, i).join(\"/\");\n\n                if (baseParts) {\n                    //Find the longest baseName segment match in the config.\n                    //So, do joins on the biggest to smallest lengths of baseParts.\n                    for (j = baseParts.length; j > 0; j -= 1) {\n                        mapValue = map[baseParts.slice(0, j).join('/')];\n\n                        //baseName segment has  config, find if it has one for\n                        //this name.\n                        if (mapValue) {\n                            mapValue = mapValue[nameSegment];\n                            if (mapValue) {\n                                //Match, update name to the new value.\n                                foundMap = mapValue;\n                                foundI = i;\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                if (foundMap) {\n                    break;\n                }\n\n                //Check for a star map match, but just hold on to it,\n                //if there is a shorter segment match later in a matching\n                //config, then favor over this star map.\n                if (!foundStarMap && starMap && starMap[nameSegment]) {\n                    foundStarMap = starMap[nameSegment];\n                    starI = i;\n                }\n            }\n\n            if (!foundMap && foundStarMap) {\n                foundMap = foundStarMap;\n                foundI = starI;\n            }\n\n            if (foundMap) {\n                nameParts.splice(0, foundI, foundMap);\n                name = nameParts.join('/');\n            }\n        }\n\n        return name;\n    }\n\n    function makeRequire(relName, forceSync) {\n        return function () {\n            //A version of a require function that passes a moduleName\n            //value for items that may need to\n            //look up paths relative to the moduleName\n            return req.apply(undef, aps.call(arguments, 0).concat([relName, forceSync]));\n        };\n    }\n\n    function makeNormalize(relName) {\n        return function (name) {\n            return normalize(name, relName);\n        };\n    }\n\n    function makeLoad(depName) {\n        return function (value) {\n            defined[depName] = value;\n        };\n    }\n\n    function callDep(name) {\n        if (hasProp(waiting, name)) {\n            var args = waiting[name];\n            delete waiting[name];\n            defining[name] = true;\n            main.apply(undef, args);\n        }\n\n        if (!hasProp(defined, name) && !hasProp(defining, name)) {\n            throw new Error('No ' + name);\n        }\n        return defined[name];\n    }\n\n    //Turns a plugin!resource to [plugin, resource]\n    //with the plugin being undefined if the name\n    //did not have a plugin prefix.\n    function splitPrefix(name) {\n        var prefix,\n            index = name ? name.indexOf('!') : -1;\n        if (index > -1) {\n            prefix = name.substring(0, index);\n            name = name.substring(index + 1, name.length);\n        }\n        return [prefix, name];\n    }\n\n    /**\n     * Makes a name map, normalizing the name, and using a plugin\n     * for normalization if necessary. Grabs a ref to plugin\n     * too, as an optimization.\n     */\n    makeMap = function (name, relName) {\n        var plugin,\n            parts = splitPrefix(name),\n            prefix = parts[0];\n\n        name = parts[1];\n\n        if (prefix) {\n            prefix = normalize(prefix, relName);\n            plugin = callDep(prefix);\n        }\n\n        //Normalize according\n        if (prefix) {\n            if (plugin && plugin.normalize) {\n                name = plugin.normalize(name, makeNormalize(relName));\n            } else {\n                name = normalize(name, relName);\n            }\n        } else {\n            name = normalize(name, relName);\n            parts = splitPrefix(name);\n            prefix = parts[0];\n            name = parts[1];\n            if (prefix) {\n                plugin = callDep(prefix);\n            }\n        }\n\n        //Using ridiculous property names for space reasons\n        return {\n            f: prefix ? prefix + '!' + name : name, //fullName\n            n: name,\n            pr: prefix,\n            p: plugin\n        };\n    };\n\n    function makeConfig(name) {\n        return function () {\n            return (config && config.config && config.config[name]) || {};\n        };\n    }\n\n    handlers = {\n        require: function (name) {\n            return makeRequire(name);\n        },\n        exports: function (name) {\n            var e = defined[name];\n            if (typeof e !== 'undefined') {\n                return e;\n            } else {\n                return (defined[name] = {});\n            }\n        },\n        module: function (name) {\n            return {\n                id: name,\n                uri: '',\n                exports: defined[name],\n                config: makeConfig(name)\n            };\n        }\n    };\n\n    main = function (name, deps, callback, relName) {\n        var cjsModule, depName, ret, map, i,\n            args = [],\n            callbackType = typeof callback,\n            usingExports;\n\n        //Use name if no relName\n        relName = relName || name;\n\n        //Call the callback to define the module, if necessary.\n        if (callbackType === 'undefined' || callbackType === 'function') {\n            //Pull out the defined dependencies and pass the ordered\n            //values to the callback.\n            //Default to [require, exports, module] if no deps\n            deps = !deps.length && callback.length ? ['require', 'exports', 'module'] : deps;\n            for (i = 0; i < deps.length; i += 1) {\n                map = makeMap(deps[i], relName);\n                depName = map.f;\n\n                //Fast path CommonJS standard dependencies.\n                if (depName === \"require\") {\n                    args[i] = handlers.require(name);\n                } else if (depName === \"exports\") {\n                    //CommonJS module spec 1.1\n                    args[i] = handlers.exports(name);\n                    usingExports = true;\n                } else if (depName === \"module\") {\n                    //CommonJS module spec 1.1\n                    cjsModule = args[i] = handlers.module(name);\n                } else if (hasProp(defined, depName) ||\n                           hasProp(waiting, depName) ||\n                           hasProp(defining, depName)) {\n                    args[i] = callDep(depName);\n                } else if (map.p) {\n                    map.p.load(map.n, makeRequire(relName, true), makeLoad(depName), {});\n                    args[i] = defined[depName];\n                } else {\n                    throw new Error(name + ' missing ' + depName);\n                }\n            }\n\n            ret = callback ? callback.apply(defined[name], args) : undefined;\n\n            if (name) {\n                //If setting exports via \"module\" is in play,\n                //favor that over return value and exports. After that,\n                //favor a non-undefined return value over exports use.\n                if (cjsModule && cjsModule.exports !== undef &&\n                        cjsModule.exports !== defined[name]) {\n                    defined[name] = cjsModule.exports;\n                } else if (ret !== undef || !usingExports) {\n                    //Use the return value from the function.\n                    defined[name] = ret;\n                }\n            }\n        } else if (name) {\n            //May just be an object definition for the module. Only\n            //worry about defining if have a module name.\n            defined[name] = callback;\n        }\n    };\n\n    requirejs = require = req = function (deps, callback, relName, forceSync, alt) {\n        if (typeof deps === \"string\") {\n            if (handlers[deps]) {\n                //callback in this case is really relName\n                return handlers[deps](callback);\n            }\n            //Just return the module wanted. In this scenario, the\n            //deps arg is the module name, and second arg (if passed)\n            //is just the relName.\n            //Normalize module name, if it contains . or ..\n            return callDep(makeMap(deps, callback).f);\n        } else if (!deps.splice) {\n            //deps is a config object, not an array.\n            config = deps;\n            if (config.deps) {\n                req(config.deps, config.callback);\n            }\n            if (!callback) {\n                return;\n            }\n\n            if (callback.splice) {\n                //callback is an array, which means it is a dependency list.\n                //Adjust args if there are dependencies\n                deps = callback;\n                callback = relName;\n                relName = null;\n            } else {\n                deps = undef;\n            }\n        }\n\n        //Support require(['a'])\n        callback = callback || function () {};\n\n        //If relName is a function, it is an errback handler,\n        //so remove it.\n        if (typeof relName === 'function') {\n            relName = forceSync;\n            forceSync = alt;\n        }\n\n        //Simulate async callback;\n        if (forceSync) {\n            main(undef, deps, callback, relName);\n        } else {\n            //Using a non-zero value because of concern for what old browsers\n            //do, and latest browsers \"upgrade\" to 4 if lower value is used:\n            //http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-windowtimers-settimeout:\n            //If want a value immediately, use require('id') instead -- something\n            //that works in almond on the global level, but not guaranteed and\n            //unlikely to work in other AMD implementations.\n            setTimeout(function () {\n                main(undef, deps, callback, relName);\n            }, 4);\n        }\n\n        return req;\n    };\n\n    /**\n     * Just drops the config on the floor, but returns req in case\n     * the config return value is used.\n     */\n    req.config = function (cfg) {\n        return req(cfg);\n    };\n\n    /**\n     * Expose module registry for debugging and tooling\n     */\n    requirejs._defined = defined;\n\n    define = function (name, deps, callback) {\n\n        //This module may not have dependencies\n        if (!deps.splice) {\n            //deps is not an array, so probably means\n            //an object literal or factory function for\n            //the value. Adjust args.\n            callback = deps;\n            deps = [];\n        }\n\n        if (!hasProp(defined, name) && !hasProp(waiting, name)) {\n            waiting[name] = [name, deps, callback];\n        }\n    };\n\n    define.amd = {\n        jQuery: true\n    };\n}());\n\ndefine(\"almond\", function(){});\n\n","require.config({\r\n  paths: {\r\n    'almond'     : '../../bower_components/almond/almond',\r\n    'lodash'     : '../../bower_components/lodash/dist/lodash',\r\n    'underscore' : '../../bower_components/underscore/underscore',\r\n    'jquery'     : '../../bower_components/jquery/dist/jquery',\r\n    'Backbone'   : '../../bower_components/backbone/backbone'\r\n  },\r\n  shim: {\r\n    'jquery': {\r\n      exports: '$'\r\n    },\r\n    'lodash': {\r\n      deps: ['underscore.string']\r\n    },\r\n    'Backbone': {\r\n      deps: ['jquery', 'lodash'],\r\n      exports: 'Backbone'\r\n    }\r\n  }\r\n});\ndefine(\"config\", function(){});\n\n","define('lib/evt',[], function () {\r\n  'use strict';\r\n\r\n  var evt = {\r\n  \tbind: function (element, type, handler) {\r\n      if (element.addEventListener) {\r\n        element.addEventListener(type, handler, false);\r\n      }\r\n      else {\r\n        element.attachEvent('on' + type, handler);\r\n      }\r\n    },\r\n    unbind: function (element, type, handler) {\r\n      element.type = null;\r\n    }\r\n  };\r\n\r\n  return evt;\r\n});\r\n\n","define('xmlParse',[], function () {\r\n    'use strict';\r\n\r\n    var xmlHTTP = new XMLHttpRequest();\r\n    var xml;\r\n\r\n    var xmlParse = {\r\n\r\n        loadXML: function (collection, url) {\r\n            xmlHTTP.open(\"GET\", url, false);\r\n            xmlHTTP.send();\r\n            xml = xmlHTTP.responseXML;\r\n            this.parseXML(collection);\r\n        },\r\n        parseXML: function (collection) {\r\n            var characters = xml.getElementsByTagName('characters')[0];\r\n            for(var i = 0; i < characters.childNodes.length; i++) {\r\n                var characterData = characters.getElementsByTagName('character')[i];\r\n                collection.add(characterData);\r\n            }\r\n        }\r\n    };\r\n\r\n    return xmlParse;\r\n});\r\n\n","define('display',[], function () {\r\n  'use strict';\r\n\r\n  var display = {\r\n    setTeams: function(teams, numTeams) {\r\n      var headerText = '';\r\n      var teamsText = '';\r\n\r\n      window.console.log(teams);\r\n      for(var i = 0; i < teams.length; i++) {\r\n        if(i === numTeams) {\r\n          headerText += \"<th>Draftable</th>\";\r\n        } else {\r\n          headerText += \"<th>Team \" + (i + 1) + \"</th>\";\r\n        }\r\n\r\n        teamsText += '<td>';\r\n        for(var j = 0; j < teams[i].length; j++) {\r\n          teamsText += teams[i][j].id + ': ' + teams[i][j].name + ': ' + teams[i][j].title + '<br>';\r\n        }\r\n        teamsText += '</td>';\r\n      }\r\n\r\n      var hNode = document.getElementById(\"header\");\r\n      var tNode = document.getElementById(\"teams\");\r\n\r\n      hNode.innerHTML = headerText;\r\n      tNode.innerHTML = teamsText;\r\n    },\r\n    hideForm: function () {\r\n      var fForm = document.getElementById(\"fForm\");\r\n      fForm.style.display = 'none';\r\n    },\r\n\r\n    showForm: function () {\r\n      var fForm = document.getElementById(\"fForm\");\r\n      fForm.style.display = 'block';\r\n    },\r\n\r\n    hideTeams: function () {\r\n      var tList = document.getElementById(\"tOutput\");\r\n      tList.style.display = 'none';\r\n    },\r\n\r\n    showTeams: function () {\r\n      var tList = document.getElementById(\"tOutput\");\r\n      tList.style.display = 'block';\r\n    },\r\n    resetForm: function () {\r\n      this.showForm();\r\n      this.hideTeams();\r\n    }\r\n  };\r\n\r\n  return display;\r\n});\r\n\n","define('randomizer',['display'], function (display) {\r\n  'use strict';\r\n\r\n  var Randomizer = {\r\n    randomize: function(charList, numTeams, numChars, draft, xChars) {\r\n      window.console.log(\"randomizing results\");\r\n      var teams;\r\n      switch(draft) {\r\n        case \"standard\":\r\n          teams = this.draftStandard(charList, numTeams, numChars, xChars);\r\n          break;\r\n\r\n        case \"pure\":\r\n          teams = this.draftPure(charList, numTeams, numChars);\r\n          break;\r\n\r\n        case \"draft\":\r\n          teams = this.draftDraft(charList, numTeams, numChars, xChars);\r\n          break;\r\n      }\r\n\r\n      display.setTeams(teams, numTeams);\r\n      display.hideForm();\r\n      display.showTeams();\r\n    },\r\n\r\n    draftStandard: function(list, numTeams, numChars, xChars) {\r\n      var teams = [];\r\n      var character;\r\n      for(var k = 0; k < numTeams; k++) {\r\n        teams.push([]);\r\n      }\r\n      for(var i = 0; i < Number(numChars) + Number(xChars); i++) {\r\n        for(var j = 0; j < numTeams; j++) {\r\n          character = list.splice(Math.round(Math.random() * list.length - 1), 1);\r\n          teams[j].push(character[0]);\r\n        }\r\n      }\r\n      return teams;\r\n    },\r\n\r\n    draftPure: function (list, numTeams, numChars) {\r\n      var teams = [];\r\n      var character;\r\n      for(var k = 0; k < numTeams; k++) {\r\n        teams.push([]);\r\n      }\r\n      for(var i = 0; i < numChars; i++) {\r\n        for(var j = 0; j < numTeams; j++) {\r\n          character = list.splice(Math.round(Math.random() * list.length - 1), 1);\r\n          teams[j].push(character[0]);\r\n        }\r\n      }\r\n      return teams;\r\n    },\r\n\r\n    draftDraft: function (list, numTeams, numChars, xChars) {\r\n      var teams = [];\r\n      var character;\r\n      for(var k = 0; k <= numTeams; k++) {\r\n        teams.push([]);\r\n      }\r\n\r\n      for(var i = 0; i < Number(numChars) / 2; i++) {\r\n        for(var j = 0; j < numTeams; j++) {\r\n          character = list.splice(Math.round(Math.random() * list.length - 1), 1);\r\n          teams[j].push(character[0]);\r\n        }\r\n      }\r\n\r\n      for(i = 0; i < ((Number(numChars) / 2) * Number(numTeams)) + Number(xChars); i++) {\r\n        character = list.splice(Math.round(Math.random() * list.length), 1);\r\n        teams[numTeams].push(character[0]);\r\n      }\r\n\r\n      return teams;\r\n    }\r\n  };\r\n\r\n  return Randomizer;\r\n});\r\n\n","define('filter',[], function () {\r\n  'use strict';\r\n\r\n  var Filter = {\r\n    filterList: function (charList, set, age, setting, circle, nature) {\r\n      window.console.log(\"filtering list\");\r\n      var filteredCharList = charList;\r\n\r\n      filteredCharList = this.applyFilter(filteredCharList, 'set', set);\r\n      filteredCharList = this.applyFilter(filteredCharList, 'age', age);\r\n      filteredCharList = this.applyFilter(filteredCharList, 'setting', setting);\r\n      filteredCharList = this.applyFilter(filteredCharList, 'circle', circle);\r\n      filteredCharList = this.applyFilter(filteredCharList, 'nature', nature);\r\n\r\n      return filteredCharList;\r\n    },\r\n\r\n    applyFilter: function (list, category, filter) {\r\n      var newList = [];\r\n      var remove;\r\n      for(var i = 0; i < list.length; i++) {\r\n        remove = true;\r\n        for(var j = 0; j < filter.length; j++) {\r\n          if(list[i][category] === filter[j]) {\r\n            remove = false;\r\n            break;\r\n          }\r\n        }\r\n        if(!remove) { newList.push(list[i]); }\r\n      }\r\n      return newList;\r\n    }\r\n  };\r\n\r\n  return Filter;\r\n});\n","define('processForm',[\r\n  'randomizer',\r\n  'filter'\r\n], function (randomizer, filter) {\r\n  'use strict';\r\n\r\n  var teams;\r\n  var chars;\r\n  var draft;\r\n  var xChars;\r\n  var set;\r\n  var age;\r\n  var setting;\r\n  var circle;\r\n  var nature;\r\n\r\n  var processForm = {\r\n    processForm: function(character_array, evt) {\r\n      var form = evt.target.form;\r\n      window.console.log(\"processed form\");\r\n      teams = form.numTeams.value;\r\n      chars = form.numChars.value;\r\n      draft = form.draft.value;\r\n      xChars = form.numXChars.value;\r\n\r\n      set = [];\r\n      for(var i = 0; i < form.set.length; i++) {\r\n        if(form.set[i].checked) { set.push(form.set[i].value); }\r\n      }\r\n\r\n      age = [];\r\n      for(i = 0; i < form.age.length; i++) {\r\n        if(form.age[i].checked) { age.push(form.age[i].value); }\r\n      }\r\n\r\n      setting = [];\r\n      for(i = 0; i < form.setting.length; i++) {\r\n        if(form.setting[i].checked) { setting.push(form.setting[i].value); }\r\n      }\r\n\r\n      circle = [];\r\n      for(i = 0; i < form.circle.length; i++) {\r\n        if(form.circle[i].checked) { circle.push(form.circle[i].value); }\r\n      }\r\n\r\n      nature = [];\r\n      for(i = 0; i < form.nature.length; i++) {\r\n        if(form.nature[i].checked) { nature.push(form.nature[i].value); }\r\n      }\r\n      var filtered_list = filter.filterList(character_array.get(), set, age, setting, circle, nature);\r\n      randomizer.randomize(filtered_list, teams, chars, draft, xChars);\r\n    },\r\n\r\n    checkClicked: function (evt) {\r\n      var clicked = evt.target;\r\n      var form = evt.target.form;\r\n      var i;\r\n      if(clicked.name === \"setting\") {\r\n        for(i = 0; i < form.age.length; i++) {\r\n          if(form.age[i].id.substr(1,1) === clicked.id.substr(1,1)) {\r\n            form.age[i].checked = true;\r\n          }\r\n        }\r\n      } else if(clicked.name === \"age\") {\r\n        for(i = 0; i < form.setting.length; i++) {\r\n          if(form.setting[i].id.substr(1,1) === clicked.id.substr(1,1)) {\r\n            form.setting[i].checked = false;\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    checkDraft: function (evt) {\r\n      var field = evt.target;\r\n      field.form.numXChars.disabled = (field.value === \"pure\") ? true : false;\r\n    }\r\n  };\r\n\r\n  return processForm;\r\n});\n","define('character',[], function () {\r\n  'use strict';\r\n\r\n  var Character = function(xml) {\r\n    if (typeof(xml) !== 'undefined') {\r\n      this.id      = xml.getAttribute('id');\r\n      this.set     = xml.getAttribute('set');\r\n      this.name    = xml.getAttribute('name');\r\n      this.title   = xml.getAttribute('title');\r\n      this.age     = xml.getAttribute('age');\r\n      this.setting = xml.getAttribute('setting');\r\n      this.circle  = xml.getAttribute('circle');\r\n      this.nature  = xml.getAttribute('nature');\r\n      this.stats   = xml.getAttribute('stats').split(',');\r\n      window.console.log(\"Character created\");\r\n    }\r\n  };\r\n\r\n  Character.prototype.id      = '';\r\n  Character.prototype.set     = '';\r\n  Character.prototype.name    = '';\r\n  Character.prototype.title   = '';\r\n  Character.prototype.age     = '';\r\n  Character.prototype.setting = '';\r\n  Character.prototype.circle  = '';\r\n  Character.prototype.nature  = '';\r\n  Character.prototype.stats   = [];\r\n\r\n  return Character;\r\n});\r\n\n","define('character_collection',['character'], function (Character) {\r\n  'use strict';\r\n\r\n  var Character_array = function (list) {\r\n    if (list === undefined) {\r\n      list = [];\r\n    }\r\n\r\n    this.init.call(this, list);\r\n  };\r\n\r\n  Character_array.prototype.list = [];\r\n\r\n  Character_array.prototype.init = function (list) {\r\n    for (var i = 0; i < list.length; i++) {\r\n      this.add(list);\r\n    }\r\n  };\r\n\r\n  Character_array.prototype.add = function (character_data) {\r\n    var character = new Character(character_data);\r\n    this.list.push(character);\r\n  };\r\n\r\n  Character_array.prototype.get = function (index) {\r\n    return this.list[index];\r\n  };\r\n\r\n  Character_array.prototype.get = function () {\r\n    return this.list;\r\n  };\r\n\r\n  return Character_array;\r\n\r\n});\n","require(['config'], function () {\r\n  'use strict';\r\n\r\n  require([\r\n    'lib/evt',\r\n    'xmlParse',\r\n    'processForm',\r\n    'character_collection',\r\n    'display'\r\n  ], function (evt, xmlParse, processForm, Character_collection, display) {\r\n      var Characters = new Character_collection();\r\n      xmlParse.loadXML(Characters, \"doa2_character_db.xml\");\r\n\r\n      // bind event handlers\r\n      var select = document.getElementById('draft_type');\r\n      evt.bind(select, 'change', processForm.checkDraft);\r\n\r\n      var checkboxes = document.getElementsByClassName('setting-checkbox');\r\n      for (var i = 0; i < checkboxes.length; i ++) {\r\n        evt.bind(checkboxes[i], 'click', processForm.checkClicked);\r\n      }\r\n\r\n      var submit = document.getElementById('submit_form');\r\n      evt.bind(submit, 'click', processForm.processForm.bind(this, Characters));\r\n\r\n      var reset = document.getElementById('reset_button');\r\n      evt.bind(reset, 'click', display.resetForm.bind(display));\r\n    }\r\n  );\r\n});\r\n\ndefine(\"main\", function(){});\n\n"]}